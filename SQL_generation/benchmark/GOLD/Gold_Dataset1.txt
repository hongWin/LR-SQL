SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC	manufactory_1
SELECT SUM(revenue) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Taiwan'	manufactory_1
SELECT DISTINCT headquarter FROM manufacturers	manufactory_1
SELECT name ,  price FROM products	manufactory_1
SELECT SUM(revenue) ,  name FROM manufacturers GROUP BY name	manufactory_1
SELECT SUM(revenue) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Taiwan'	manufactory_1
SELECT SUM(revenue) FROM manufacturers WHERE headquarter  =  'Austin'	manufactory_1
SELECT name FROM products WHERE price  <=  200	manufactory_1
SELECT stuid ,  COUNT(*) ,  SUM(gamesplayed) FROM sportsinfo GROUP BY stuid	game_1
SELECT COUNT(DISTINCT stuid) FROM plays_games	game_1
SELECT major ,  AVG(age) ,  MIN(age) ,  MAX(age) FROM student GROUP BY major	game_1
SELECT stuid ,  SUM(hours_played) FROM plays_games GROUP BY stuid	game_1
SELECT DISTINCT gtype FROM video_games	game_1
SELECT gtype ,  COUNT(*) FROM video_games GROUP BY gtype	game_1
SELECT fname ,  age FROM student WHERE stuid IN (SELECT stuid FROM sportsinfo WHERE sportname  =  "Football" INTERSECT SELECT stuid FROM sportsinfo WHERE sportname  =  "Lacrosse")	game_1
SELECT gtype FROM video_games GROUP BY gtype ORDER BY COUNT(*) LIMIT 1	game_1
SELECT COUNT(*) FROM documents	cre_Docs_and_Epenses
SELECT document_name ,  document_id FROM documents WHERE document_type_code  =  "BK"	cre_Docs_and_Epenses
SELECT statement_id ,  COUNT(*) FROM accounts GROUP BY statement_id	cre_Docs_and_Epenses
SELECT document_id FROM documents_with_expenses WHERE budget_type_code  =  'SF'	cre_Docs_and_Epenses
SELECT t1.document_id FROM documents as t1 JOIN documents_with_expenses as t2 ON t1.document_id  =  t2.document_id WHERE t1.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT COUNT(*) FROM ref_budget_codes	cre_Docs_and_Epenses
SELECT document_type_code ,  document_type_name ,  document_type_description FROM ref_document_types	cre_Docs_and_Epenses
SELECT t1.project_id ,  t1.project_details FROM projects as t1 JOIN documents as t2 ON t1.project_id  =  t2.project_id GROUP BY t1.project_id HAVING COUNT(*)  >  2	cre_Docs_and_Epenses
SELECT DISTINCT t1.paperid FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";	scholar
SELECT DISTINCT t2.citingpaperid FROM paper as t1 JOIN cite as t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT(DISTINCT t2.citedpaperid)  >=  5;	scholar
SELECT DISTINCT journalid FROM paper WHERE year  =  2011 GROUP BY journalid;	scholar
SELECT DISTINCT t3.paperid FROM paperdataset as t2 JOIN dataset as t1 ON t2.datasetid  =  t1.datasetid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN venue as t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  "ImageNet" AND t3.year  =  2014 AND t4.venuename  =  "eccv";	scholar
SELECT DISTINCT t2.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";	scholar
SELECT DISTINCT t3.journalid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Trophic Cascade" AND t3.year  =  2010 GROUP BY t3.journalid;	scholar
SELECT DISTINCT t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN venue as t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";	scholar
SELECT DISTINCT t2.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";	scholar
SELECT DISTINCT t3.venueid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Daniella Coelho";	scholar
SELECT DISTINCT t3.paperid FROM writes as t3 JOIN author as t2 ON t3.authorid  =  t2.authorid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";	scholar
SELECT DISTINCT COUNT(t3.citingpaperid)  ,  t1.keyphrasename FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite as t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT(t3.citingpaperid) DESC;	scholar
SELECT DISTINCT COUNT(DISTINCT t3.paperid) FROM paperdataset as t2 JOIN dataset as t1 ON t2.datasetid  =  t1.datasetid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE "ImageNet";	scholar
SELECT DISTINCT t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";	scholar
SELECT DISTINCT t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "Question Answering";	scholar
SELECT DISTINCT t1.paperid FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "chi";	scholar
SELECT DISTINCT t3.citingpaperid FROM paper as t1 JOIN cite as t3 ON t1.paperid  =  t3.citedpaperid JOIN venue as t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "ACL" GROUP BY t3.citingpaperid HAVING COUNT(DISTINCT t3.citedpaperid)  <  5;	scholar
SELECT DISTINCT t1.paperid FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";	scholar
SELECT DISTINCT COUNT(t2.keyphraseid)  ,  t2.keyphraseid FROM paper as t3 JOIN paperkeyphrase as t2 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "oren etzioni" GROUP BY t2.keyphraseid ORDER BY COUNT(t2.keyphraseid) DESC;	scholar
SELECT DISTINCT t3.paperid FROM paperdataset as t2 JOIN dataset as t1 ON t2.datasetid  =  t1.datasetid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  "WebKB";	scholar
SELECT DISTINCT t2.datasetid FROM paperdataset as t3 JOIN dataset as t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase as t1 ON t1.paperid  =  t3.paperid JOIN keyphrase as t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  "semantic parsing";	scholar
SELECT DISTINCT t3.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015;	scholar
SELECT DISTINCT t4.citedpaperid  ,  COUNT(t4.citedpaperid) FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN cite as t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "parsing" GROUP BY t4.citedpaperid ORDER BY COUNT(t4.citedpaperid) DESC;	scholar
SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";	scholar
SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";	scholar
SELECT DISTINCT t1.authorid FROM venue as t3 JOIN paper as t2 ON t3.venueid  =  t2.venueid JOIN writes as t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";	scholar
SELECT DISTINCT COUNT(t1.paperid)  ,  t1.year FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  "NIPS" GROUP BY t1.year ORDER BY COUNT(t1.paperid) DESC;	scholar
SELECT DISTINCT t1.authorname FROM paperkeyphrase as t2 JOIN keyphrase as t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes as t3 ON t3.paperid  =  t2.paperid JOIN author as t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE "sensor fusion";	scholar
SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";	scholar
SELECT DISTINCT t3.paperid FROM writes as t3 JOIN author as t2 ON t3.authorid  =  t2.authorid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  "Peter Mertens" AND t1.authorname  =  "Dina Barbian";	scholar
SELECT DISTINCT t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "instance segmentation" AND t3.journalid  >=  0;	scholar
SELECT DISTINCT COUNT(t1.paperid) FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "nature communications";	scholar
SELECT DISTINCT t3.year FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "deep learning" GROUP BY t3.year ORDER BY t3.year asC;	scholar
SELECT DISTINCT t2.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";	scholar
SELECT DISTINCT paperid FROM paper WHERE year  =  ( SELECT MAX(year) FROM paper );	scholar
SELECT DISTINCT t4.citedpaperid  ,  COUNT(t4.citingpaperid) FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN cite as t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  "Artificial Intelligence" GROUP BY t4.citedpaperid ORDER BY COUNT(t4.citingpaperid) DESC;	scholar
SELECT DISTINCT COUNT(DISTINCT t4.citingpaperid)  ,  t1.keyphraseid  ,  t2.paperid FROM paper as t2 JOIN cite as t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase as t1 ON t2.paperid  =  t1.paperid JOIN venue as t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  "EMNLP-CoNLL" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT(DISTINCT t4.citingpaperid) DESC;	scholar
SELECT DISTINCT venueid FROM paper WHERE title  =  "Fracture of acrylic bone cement";	scholar
SELECT DISTINCT COUNT(DISTINCT t2.paperid) FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning";	scholar
SELECT DISTINCT t1.authorid FROM venue as t3 JOIN paper as t2 ON t3.venueid  =  t2.venueid JOIN writes as t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  "acl";	scholar
SELECT DISTINCT t3.paperid  ,  t3.year FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "balakrishnan prabhakaran";	scholar
SELECT DISTINCT t2.datasetid FROM paper as t3 JOIN paperdataset as t2 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "jitendra malik";	scholar
SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  "Luke Zettlemoyer";	scholar
SELECT DISTINCT COUNT(t3.paperid)  ,  t3.year FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "benjamin mako hill" GROUP BY t3.year ORDER BY t3.year;	scholar
SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN writes as t4 ON t4.paperid  =  t3.paperid JOIN author as t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  "brian curless" AND t5.keyphrasename  =  "convolution";	scholar
SELECT DISTINCT COUNT(DISTINCT t2.paperid) FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning";	scholar
SELECT DISTINCT t3.venueid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "li dong" AND t3.year  =  2016;	scholar
SELECT DISTINCT COUNT(DISTINCT t2.paperid)  ,  t1.authorid FROM venue as t3 JOIN paper as t2 ON t3.venueid  =  t2.venueid JOIN writes as t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  "chi" GROUP BY t1.authorid ORDER BY COUNT(DISTINCT t2.paperid) DESC;	scholar
SELECT DISTINCT COUNT(DISTINCT t4.citingpaperid)  ,  t1.authorid FROM venue as t3 JOIN paper as t2 ON t3.venueid  =  t2.venueid JOIN writes as t1 ON t1.paperid  =  t2.paperid JOIN cite as t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  "CVPR" GROUP BY t1.authorid ORDER BY COUNT(DISTINCT t4.citingpaperid) DESC;	scholar
SELECT DISTINCT t3.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid JOIN paper as t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  "Liwen Xiong" AND t3.year  =  2015;	scholar
SELECT DISTINCT COUNT(t3.paperid) FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "convolutional neural networks" AND t3.year  =  2016;	scholar
SELECT DISTINCT COUNT(t3.paperid) FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  "question answering" AND t3.year  >=  2011;	scholar
SELECT DISTINCT t3.paperid FROM paperkeyphrase as t2 JOIN keyphrase as t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper as t3 ON t3.paperid  =  t2.paperid JOIN venue as t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  "Parsing" AND t3.year  =  2012 AND t4.venuename  =  "acl";	scholar
SELECT DISTINCT COUNT(DISTINCT t2.paperid) FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "Christopher D. Manning";	scholar
SELECT DISTINCT t1.paperid FROM venue as t2 JOIN paper as t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  "pldi";	scholar
SELECT DISTINCT t2.paperid FROM writes as t2 JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "sharon goldwater";	scholar
SELECT DISTINCT t4.citedpaperid  ,  COUNT(t4.citedpaperid) FROM paper as t3 JOIN cite as t4 ON t3.paperid  =  t4.citedpaperid JOIN writes as t2 ON t2.paperid  =  t3.paperid JOIN author as t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  "ohad shamir" GROUP BY t4.citedpaperid ORDER BY COUNT(t4.citedpaperid) DESC;	scholar
SELECT SUM(enrollment) ,  AVG(enrollment) FROM school	school_finance
SELECT t2.school_name FROM endowment as t1 JOIN school as t2 ON t1.school_id  =  t2.school_id WHERE t1.amount  >  8.5 GROUP BY t1.school_id HAVING COUNT(*)  >  1	school_finance
SELECT nominee FROM musical WHERE award  =  "Tony award" OR award  =  "Cleavant Derricks"	musical
SELECT DISTINCT nominee FROM musical WHERE award != "Tony award"	musical
SELECT COUNT(*) FROM actor	musical
SELECT COUNT(*) FROM actor	musical
SELECT investor ,  COUNT(*) FROM entrepreneur GROUP BY investor	entrepreneur
SELECT SUM(t1.money_requested) FROM entrepreneur as t1 JOIN people as t2 ON t1.people_id  =  t2.people_id WHERE t2.height  >  1.85	entrepreneur
SELECT COUNT(DISTINCT company) FROM entrepreneur	entrepreneur
SELECT COUNT(DISTINCT company) FROM entrepreneur	entrepreneur
SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  "USA" GROUP BY billing_state;	store_1
SELECT t1.name FROM tracks as t1 JOIN playlist_tracks as t2 ON t1.id  =  t2.track_id JOIN playlists as t3 ON t2.playlist_id  =  t3.id WHERE t3.name  =  'Movies' INTERSECT SELECT t1.name FROM tracks as t1 JOIN playlist_tracks as t2 ON t1.id  =  t2.track_id JOIN playlists as t3 ON t2.playlist_id  =  t3.id WHERE t3.name  =  'Music'	store_1
SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";	store_1
SELECT COUNT(*) FROM albums as t1 JOIN artists as t2 ON  t1.artist_id = t2.id WHERE t2.name = "Billy Cobham";	store_1
SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;	store_1
SELECT milliseconds FROM tracks WHERE name = "Fast As a Shark";	store_1
SELECT t2.name FROM playlist_tracks as t1 JOIN playlists as t2 ON t2.id = t1.playlist_id GROUP BY t1.playlist_id HAVING COUNT(t1.track_id)  >  100;	store_1
SELECT t1.first_name ,  t1.last_name ,  COUNT(*) FROM customers as t1 JOIN invoices as t2 ON t2.customer_id  =  t1.id GROUP BY t1.id ORDER BY COUNT(*) DESC LIMIT 10;	store_1
SELECT t1.first_name , t1.last_name FROM employees as t1 JOIN customers as t2 ON t1.id  =  t2.support_rep_id GROUP BY t1.id ORDER BY COUNT(*) DESC LIMIT 1	store_1
SELECT t1.name ,  COUNT(*) FROM genres as t1 JOIN tracks as t2 ON t2.genre_id  =  t1.id GROUP BY t1.id ORDER BY COUNT(*) DESC LIMIT 5;	store_1
SELECT t1.title FROM albums as t1 JOIN tracks as t2 ON t1.id = t2.genre_id WHERE t2.name = "Balls to the Wall";	store_1
SELECT t1.name ,  t3.visit_date FROM tourist_attractions as t1 JOIN visitors as t2 JOIN visits as t3 ON t1.tourist_attraction_id  =  t3.tourist_attraction_id AND t2.tourist_id  =  t3.tourist_id WHERE t2.tourist_details  =  "Vincent" OR t2.tourist_details  =  "Vivian"	cre_Theme_park
SELECT t1.attraction_type_description ,  t2.attraction_type_code FROM ref_attraction_types as t1 JOIN tourist_attractions as t2 ON t1.attraction_type_code  =  t2.attraction_type_code GROUP BY t2.attraction_type_code ORDER BY COUNT(*) DESC LIMIT 1	cre_Theme_park
SELECT t1.name FROM tourist_attractions as t1 JOIN visitors as t2 JOIN visits as t3 ON t1.tourist_attraction_id  =  t3.tourist_attraction_id AND t2.tourist_id  =  t3.tourist_id WHERE t2.tourist_details  =  "Alison" EXCEPT SELECT t1.name FROM tourist_attractions as t1 JOIN visitors as t2 JOIN visits as t3 ON t1.tourist_attraction_id  =  t3.tourist_attraction_id AND t2.tourist_id  =  t3.tourist_id WHERE t2.tourist_details  =  "Rosalind"	cre_Theme_park
SELECT address FROM locations WHERE location_name  =  "UK Gallery"	cre_Theme_park
SELECT hotel_id ,  star_rating_code FROM hotels ORDER BY price_range ASC	cre_Theme_park
SELECT tourist_details FROM visitors	cre_Theme_park
SELECT t1.name FROM staff as t1 JOIN tourist_attractions as t2 ON t1.tourist_attraction_id  =  t2.tourist_attraction_id WHERE t2.name  =  "US museum"	cre_Theme_park
SELECT price_range FROM hotels	cre_Theme_park
SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) LIMIT 1	flight_1
SELECT t2.name FROM flight as t1 JOIN aircraft as t2 ON t1.aid  =  t2.aid WHERE t1.flno  =  99	flight_1
SELECT COUNT(*) FROM employee	flight_1
SELECT eid ,  name FROM employee ORDER BY salary DESC LIMIT 1	flight_1
SELECT destination FROM flight GROUP BY destination ORDER BY COUNT(*) LIMIT 1	flight_1
SELECT aid ,  name FROM aircraft ORDER BY distance DESC LIMIT 1	flight_1
SELECT eid ,  salary FROM employee WHERE name  =  'Mark Young'	flight_1
SELECT t1.name FROM employee as t1 JOIN certificate as t2 ON t1.eid  =  t2.eid JOIN aircraft as t3 ON t3.aid  =  t2.aid WHERE t3.name  =  "Boeing 737-800" INTERSECT SELECT t1.name FROM employee as t1 JOIN certificate as t2 ON t1.eid  =  t2.eid JOIN aircraft as t3 ON t3.aid  =  t2.aid WHERE t3.name  =  "Airbus A340-300"	flight_1
SELECT origin FROM flight WHERE destination  =  "Honolulu"	flight_1
SELECT SUM(area) FROM state;	geo
SELECT population FROM city WHERE city_name  =  "boulder";	geo
SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) );	geo
SELECT traverse FROM river WHERE length  =  ( SELECT MAX(length) FROM river );	geo
SELECT highest_point FROM highlow WHERE state_name  =  "texas";	geo
SELECT border FROM border_info WHERE state_name  =  "kentucky";	geo
SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN(area) FROM state ) );	geo
SELECT population FROM state WHERE area  =  ( SELECT MAX(area) FROM state );	geo
SELECT population FROM city WHERE city_name  =  "boulder";	geo
SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );	geo
SELECT state_name FROM city WHERE population  =  ( SELECT MAX(t1.population) FROM state as t2 JOIN city as t1 ON t2.capital  =  t1.city_name );	geo
SELECT state_name FROM state WHERE density  =  ( SELECT MIN(density) FROM state );	geo
SELECT COUNT(border) FROM border_info WHERE state_name  =  "kentucky";	geo
SELECT t2.capital FROM state as t2 JOIN city as t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;	geo
SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT(DISTINCT traverse) DESC LIMIT 1;	geo
SELECT population FROM city WHERE population  =  ( SELECT MAX(population) FROM city WHERE state_name  =  "alaska" ) AND state_name  =  "alaska";	geo
SELECT state_name FROM city WHERE city_name  =  "springfield";	geo
SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX(highest_elevation) FROM highlow );	geo
SELECT COUNT(river_name) FROM river WHERE traverse  =  "idaho";	geo
SELECT city_name FROM city WHERE population  =  ( SELECT MIN(population) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX(area) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX(area) FROM state ) );	geo
SELECT city_name FROM city WHERE state_name  =  "texas";	geo
SELECT DISTINCT traverse FROM river WHERE length  =  ( SELECT MIN(DISTINCT length) FROM river );	geo
SELECT mountain_altitude FROM mountain WHERE mountain_name  =  "mckinley";	geo
SELECT river_name FROM river WHERE length  =  ( SELECT MAX(length) FROM river );	geo
SELECT COUNT(border) FROM border_info WHERE state_name  =  "kentucky";	geo
SELECT COUNT(city_name) FROM city WHERE state_name  =  "texas";	geo
SELECT SUM(t2.population) FROM state as t2 JOIN border_info as t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  "texas";	geo
SELECT COUNT(traverse) FROM river WHERE length  >  750;	geo
SELECT city_name FROM city WHERE population  =  ( SELECT MAX(t1.population) FROM state as t2 JOIN city as t1 ON t2.capital  =  t1.city_name );	geo
SELECT state_name FROM state WHERE area  =  ( SELECT MAX(area) FROM state );	geo
SELECT COUNT(city_name) FROM city WHERE city_name  =  "austin";	geo
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX(population) FROM state ) );	geo
SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE length  >  750 AND river_name  =  "mississippi" );	geo
SELECT density FROM state WHERE area  =  ( SELECT MAX(area) FROM state );	geo
SELECT state_name FROM state WHERE area  =  ( SELECT MIN(area) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  "texas" );	geo
SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  "mississippi" );	geo
SELECT city_name FROM city WHERE population  =  ( SELECT MAX(population) FROM city WHERE state_name  =  "wyoming" ) AND state_name  =  "wyoming";	geo
SELECT state_name FROM city WHERE city_name  =  "springfield";	geo
SELECT state_name FROM state WHERE density  =  ( SELECT MIN(density) FROM state );	geo
SELECT river_name FROM river WHERE length  =  ( SELECT MIN(length) FROM river );	geo
SELECT city_name FROM city WHERE population  =  ( SELECT MAX(population) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN(area) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN(area) FROM state ) );	geo
SELECT border FROM border_info WHERE state_name  =  "kentucky";	geo
SELECT density FROM state WHERE area  =  ( SELECT MIN(area) FROM state );	geo
SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  "tennessee" );	geo
SELECT capital FROM state WHERE area  =  ( SELECT MAX(area) FROM state );	geo
SELECT t1.border FROM border_info as t2 JOIN border_info as t1 ON t2.border  =  t1.state_name JOIN border_info as t3 ON t3.border  =  t2.state_name JOIN border_info as t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  "texas";	geo
SELECT COUNT(river_name) FROM river WHERE traverse  =  "idaho";	geo
SELECT border FROM border_info WHERE state_name  =  "kentucky";	geo
SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX(area) FROM state ) );	geo
SELECT population FROM city WHERE city_name  =  "seattle" AND state_name  =  "washington";	geo
SELECT length FROM river WHERE river_name  =  "rio grande";	geo
SELECT mountain_name FROM mountain WHERE state_name  =  "alaska";	geo
SELECT state_name FROM state WHERE population  =  ( SELECT MAX(population) FROM state );	geo
SELECT river_name FROM river WHERE length  =  ( SELECT MAX(length) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN(area) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN(area) FROM state ) );	geo
SELECT population FROM city WHERE population  =  ( SELECT MAX(population) FROM city );	geo
SELECT COUNT(river_name) FROM river WHERE traverse  =  "idaho";	geo
SELECT name ,  location FROM wrestler	wrestler
SELECT location FROM wrestler GROUP BY location HAVING COUNT(*)  >  2	wrestler
SELECT name FROM wrestler ORDER BY days_held ASC LIMIT 1	wrestler
SELECT team FROM elimination WHERE eliminated_by  =  "Orton" INTERSECT SELECT team FROM elimination WHERE eliminated_by  =  "Benjamin"	wrestler
SELECT COUNT(DISTINCT t3.name) FROM review as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id JOIN user as t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  "Pittsburgh" AND t1.name  =  "Sushi Too";	yelp
SELECT t1.name FROM category as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id JOIN review as t3 ON t3.business_id  =  t1.business_id JOIN user as t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  "Bars" AND t4.name  =  "Patrick";	yelp
SELECT t1.neighbourhood_name FROM category as t3 JOIN business as t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood as t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  "Flat Top Grill" AND t3.category_name  =  "category_category_name0";	yelp
SELECT COUNT(DISTINCT t1.text) FROM user as t2 JOIN review as t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  "March" AND t1.year  =  2014 AND t2.name  =  "Michelle";	yelp
SELECT t2.count FROM checkin as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  "Cafe Zinho" AND t2.day  =  "Friday";	yelp
SELECT t1.name FROM category as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "breweries";	yelp
SELECT t1.name FROM checkin as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM(t2.count) DESC LIMIT 1;	yelp
SELECT SUM(t2.likes) FROM tip as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id JOIN user as t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  "Cafe Zinho" AND t3.name  =  "Niloofar";	yelp
SELECT SUM(t4.count) FROM category as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id JOIN category as t3 ON t3.business_id  =  t1.business_id JOIN checkin as t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  "Los Angeles" AND t2.category_name  =  "Moroccan" AND t3.category_name  =  "restaurant" AND t4.day  =  "Friday";	yelp
SELECT t1.neighbourhood_name FROM neighbourhood as t1 JOIN business as t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  "Madison" GROUP BY t1.neighbourhood_name ORDER BY COUNT(DISTINCT t2.name) DESC LIMIT 1;	yelp
SELECT t3.text FROM category as t2 JOIN business as t1 ON t2.business_id  =  t1.business_id JOIN review as t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  "Pet Groomers";	yelp
SELECT category ,  COUNT(*) FROM book_club GROUP BY category	culture_company
SELECT category FROM book_club WHERE year  >  1989 GROUP BY category HAVING COUNT(*)  >=  2	culture_company
SELECT COUNT(DISTINCT director) FROM movie	culture_company
SELECT date_of_notes FROM assessment_notes	behavior_monitoring
SELECT last_name FROM teachers EXCEPT SELECT t1.last_name FROM teachers as t1 JOIN detention as t2 ON t1.teacher_id  =  t2.teacher_id	behavior_monitoring
SELECT t1.teacher_id ,  t2.first_name FROM assessment_notes as t1 JOIN teachers as t2 ON t1.teacher_id  =  t2.teacher_id GROUP BY t1.teacher_id ORDER BY COUNT(*) DESC LIMIT 3	behavior_monitoring
SELECT COUNT(DISTINCT student_id) FROM students_in_detention	behavior_monitoring
SELECT name FROM club ORDER BY name DESC	sports_competition
SELECT t1.name ,  t2.player_id FROM club as t1 JOIN player as t2 ON t1.club_id  =  t2.club_id	sports_competition
SELECT name FROM player WHERE points  >  (SELECT AVG(points) FROM player)	sports_competition
SELECT name FROM club ORDER BY start_year ASC	sports_competition
SELECT position FROM player GROUP BY name HAVING AVG(points)  >=  20	sports_competition
SELECT name ,  location ,  seating FROM track ORDER BY year_opened DESC LIMIT 1	race_track
SELECT MIN(seating) ,  MAX(seating) ,  AVG(seating) FROM track	race_track
SELECT t1.name ,  t1.date ,  t2.name FROM race as t1 JOIN track as t2 ON t1.track_id  =  t2.track_id	race_track
SELECT t2.name ,  COUNT(*) FROM race as t1 JOIN track as t2 ON t1.track_id  =  t2.track_id GROUP BY t1.track_id	race_track
SELECT title ,  studio FROM film WHERE studio LIKE "%Universal%"	film_rank
SELECT studio FROM film GROUP BY studio ORDER BY COUNT(*) DESC LIMIT 1	film_rank
SELECT t2.country ,  t1.year FROM film_market_estimation as t1 JOIN market as t2 ON t1.market_id  =  t2.market_id	film_rank
SELECT t2.country ,  t1.year FROM film_market_estimation as t1 JOIN market as t2 ON t1.market_id  =  t2.market_id	film_rank
SELECT attribute_data_type FROM attribute_definitions WHERE attribute_name  =  "Green"	product_catalog
SELECT DISTINCT(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE "%Murray%"	product_catalog
SELECT t1.catalog_entry_name FROM catalog_contents as t1 JOIN catalog_contents_Additional_Attributes as t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  "8"	product_catalog
SELECT COUNT(*) FROM catalog_contents	product_catalog
SELECT city ,  COUNT(*) FROM airports GROUP BY city HAVING COUNT(*)  >  1	flight_4
SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING COUNT(*)  >  3	flight_4
SELECT t1.country ,  t1.name ,  COUNT(*) FROM airlines as t1 JOIN routes as t2 ON t1.alid  =  t2.alid GROUP BY t1.country ,  t1.name	flight_4
SELECT COUNT(*) ,  t1.name FROM airports as t1 JOIN routes as t2 ON t1.apid  =  t2.src_apid GROUP BY t1.name ORDER BY COUNT(*) DESC	flight_4
SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1	flight_4
SELECT t1.name ,  t1.city ,  t2.src_apid FROM airports as t1 JOIN routes as t2 ON t1.apid  =  t2.src_apid GROUP BY t2.src_apid ORDER BY COUNT(*) DESC LIMIT 1	flight_4
SELECT COUNT(*) ,  t1.name FROM airports as t1 JOIN routes as t2 ON t1.apid  =  t2.src_apid GROUP BY t1.name	flight_4
SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1	flight_4
SELECT COUNT(*) FROM files WHERE duration LIKE "4:%"	music_1
SELECT song_name FROM song WHERE rating  <   (SELECT MIN(rating) FROM song WHERE languages  =  'english')	music_1
SELECT AVG(t2.rating) FROM artist as t1 JOIN song as t2 ON t1.artist_name  =  t2.artist_name WHERE t1.gender  =  "Female"	music_1
SELECT song_name FROM song ORDER BY resolution	music_1
SELECT song_name FROM song ORDER BY resolution	music_1
SELECT artist_name FROM artist WHERE country  =  "UK" AND gender  =  "Male"	music_1
SELECT AVG(rating) ,  AVG(resolution) FROM song WHERE languages  =  "bangla"	music_1
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1	music_1
SELECT t2.song_name FROM files as t1 JOIN song as t2 ON t1.f_id  =  t2.f_id WHERE t1.duration LIKE "4:%" UNION SELECT song_name FROM song WHERE languages  =  "english"	music_1
SELECT COUNT(*) ,  formats FROM files GROUP BY formats	music_1
SELECT MAX(home_games) ,  MIN(home_games) ,  AVG(home_games) FROM stadium	game_injury
SELECT DISTINCT name FROM medication ORDER BY name	hospital_1
SELECT t1.name FROM patient as t1 JOIN appointment as t2 ON t1.ssn = t2.patient ORDER BY t2.start DESC LIMIT 1	hospital_1
SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1	hospital_1
SELECT COUNT(*) FROM patient WHERE ssn NOT IN ( SELECT t1.patient FROM prescribes as t1 JOIN medication as t2 ON t1.medication  =  t2.code WHERE t2.name  =  'Procrastin-X' )	hospital_1
SELECT t1.name ,  COUNT(*) FROM physician as t1 JOIN patient as t2 ON t1.employeeid  =  t2.pcp GROUP BY t1.employeeid	hospital_1
SELECT appointmentid FROM appointment ORDER BY start DESC LIMIT 1	hospital_1
SELECT t2.name ,  t2.position FROM department as t1 JOIN physician as t2 ON t1.head  =  t2.employeeid GROUP BY departmentid ORDER BY COUNT(departmentid) LIMIT 1;	hospital_1
SELECT name ,  phone FROM appointment as t1 JOIN patient as t2 ON t1.patient  =  t2.ssn GROUP BY t1.patient HAVING COUNT(*)  >  1	hospital_1
SELECT DISTINCT name FROM medication ORDER BY name	hospital_1
SELECT name ,  phone FROM appointment as t1 JOIN patient as t2 ON t1.patient  =  t2.ssn GROUP BY t1.patient HAVING COUNT(*)  >  1	hospital_1
SELECT AVG(price) FROM wine WHERE appelation NOT IN (SELECT t1.appelation FROM appellations as t1 JOIN wine as t2 ON t1.appelation  =  t2.appelation WHERE t1.county  =  'Sonoma')	wine_1
SELECT DISTINCT t2.name FROM grapes as t1 JOIN wine as t2 ON t1.grape  =  t2.grape WHERE t1.color  =  "Red"	wine_1
SELECT MAX(t2.price) FROM appellations as t1 JOIN wine as t2 ON t1.appelation  =  t2.appelation WHERE t1.area  =  "Central Coast" AND t2.year  <  2005	wine_1
SELECT t2.winery FROM grapes as t1 JOIN wine as t2 ON t1.grape  =  t2.grape WHERE t1.color  =  "White" GROUP BY t2.winery ORDER BY COUNT(*) DESC LIMIT 3	wine_1
SELECT t2.name FROM appellations as t1 JOIN wine as t2 ON t1.appelation  =  t2.appelation WHERE t1.county  =  "Monterey" AND t2.price  <  50	wine_1
SELECT name FROM wine WHERE score  >  90	wine_1
SELECT DISTINCT name FROM wine WHERE year  <  2000 OR year  >  2010	wine_1
SELECT DISTINCT name FROM wine WHERE price  >  (SELECT MIN(price) FROM wine WHERE winery  =  "John Anthony")	wine_1
SELECT industry FROM companies WHERE headquarters  =  "USA" INTERSECT SELECT industry FROM companies WHERE headquarters  =  "China"	company_office
SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM office_locations)	company_office
SELECT industry FROM companies GROUP BY industry ORDER BY COUNT(*) DESC LIMIT 1	company_office
SELECT name FROM buildings ORDER BY height DESC	company_office
SELECT event_name FROM party_events GROUP BY event_name HAVING COUNT(*)  >  2	party_people
SELECT COUNT(*) FROM region	party_people
SELECT event_name FROM party_events GROUP BY event_name HAVING COUNT(*)  >  2	party_people
SELECT minister ,  party_name FROM party ORDER BY took_office DESC	party_people
SELECT t1.name FROM browser as t1 JOIN accelerator_compatible_browser as t2 ON t1.id  =  t2.browser_id JOIN web_client_accelerator as t3 ON t2.accelerator_id  =  t3.id WHERE t3.name  =  'CProxy' AND t2.compatible_since_year  >  1998	browser_web
SELECT t1.purchase_details FROM purchases as t1 JOIN transactions as t2 ON t1.purchase_transaction_id  =  t2.transaction_id WHERE t2.amount_of_transaction  >  10000	tracking_share_transactions
SELECT t1.lot_details FROM lots as t1 JOIN transactions_lots as t2 ON  t1.lot_id  =  t2.transaction_id JOIN transactions as t3 ON t2.transaction_id  =  t3.transaction_id WHERE t3.share_count  >  100 AND t3.transaction_type_code  =  "PUR"	tracking_share_transactions
SELECT date_of_transaction FROM transactions WHERE transaction_type_code  =  "SALE"	tracking_share_transactions
SELECT investor_id ,  AVG(amount_of_transaction) FROM transactions GROUP BY investor_id	tracking_share_transactions
SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'	university_basketball
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1	university_basketball
SELECT COUNT(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)	university_basketball
SELECT AVG(enrollment) FROM university WHERE founded  <  1850	university_basketball
SELECT COUNT(*) FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "palo alto" AND t1.food_type  =  "french";	restaurants
SELECT t3.house_number  ,  t1.name FROM restaurant as t1 JOIN geographic as t2 ON t1.city_name  =  t2.city_name JOIN location as t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;	restaurants
SELECT t2.house_number  ,  t1.name FROM location as t2 JOIN restaurant as t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "region0" ) AND t1.rating  >  2.5;	restaurants
SELECT t2.house_number  ,  t1.name FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t2.street_name  =  "buchanan" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;	restaurants
SELECT t2.house_number  ,  t1.name FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.name  =  "jamerican cuisine";	restaurants
SELECT t2.house_number  ,  t1.name FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "mountain view" AND t1.food_type  =  "arabic" AND t1.rating  >  2.5;	restaurants
SELECT t2.house_number  ,  t1.name FROM location as t2 JOIN restaurant as t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  "bay area" );	restaurants
SELECT t3.house_number  ,  t1.name FROM restaurant as t1 JOIN geographic as t2 ON t1.city_name  =  t2.city_name JOIN location as t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "yosemite and mono lake area" AND t1.food_type  =  "french" AND t1.rating  >  2.5;	restaurants
SELECT t2.house_number  ,  t1.name FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" AND t1.rating  =  ( SELECT MAX(t1.rating) FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "san francisco" AND t1.food_type  =  "french" );	restaurants
SELECT COUNT(*) FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "palo alto" AND t1.food_type  =  "french";	restaurants
SELECT t2.house_number  ,  t1.name FROM restaurant as t1 JOIN location as t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  "alameda";	restaurants
SELECT t3.house_number  ,  t1.name FROM restaurant as t1 JOIN geographic as t2 ON t1.city_name  =  t2.city_name JOIN location as t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" AND t1.rating  =  ( SELECT MAX(t1.rating) FROM restaurant as t1 JOIN geographic as t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  "bay area" AND t1.food_type  =  "american" );	restaurants
SELECT name ,  email FROM user_profiles WHERE followers  >  1000	twitter_1
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5	twitter_1
SELECT t1.name ,  t1.lat ,  MIN(t2.duration) FROM station as t1 JOIN trip as t2 ON t1.id  =  t2.end_station_id GROUP BY t2.end_station_id	bike_1
SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT(*) DESC LIMIT 3	bike_1
SELECT t1.name ,  t1.id FROM station as t1 JOIN status as t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id HAVING AVG(t2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE "12/%"	bike_1
SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1	bike_1
SELECT t1.id ,  t2.installation_date FROM trip as t1 JOIN station as t2 ON t1.end_station_id  =  t2.id	bike_1
SELECT city FROM station GROUP BY city ORDER BY MAX(lat) DESC	bike_1
SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200	bike_1
SELECT DISTINCT t1.id ,  t1.name FROM station as t1 JOIN status as t2 ON t1.id  =  t2.station_id WHERE t2.bikes_available  >  12	bike_1
SELECT COUNT(*) FROM station WHERE city  =  "Mountain View"	bike_1
SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1	bike_1
SELECT campus FROM campuses WHERE year  >=  1935 AND year  <=  1939	csu_1
SELECT SUM(faculty) FROM faculty WHERE year  =  2002	csu_1
SELECT campusfee FROM campuses as t1 JOIN csu_fees as t2 ON t1.id  =  t2.campus WHERE t1.campus  =  "San Francisco State University" AND t2.year  =  1996	csu_1
SELECT campus FROM campuses WHERE year  <  1800	csu_1
SELECT COUNT(*) FROM campuses WHERE county  =  "Los Angeles"	csu_1
SELECT AVG(campusfee) FROM csu_fees WHERE year  =  2005	csu_1
SELECT campusfee FROM campuses as t1 JOIN csu_fees as t2 ON t1.id  =  t2.campus WHERE t1.campus  =  "San Jose State University" AND t2.year  =  1996	csu_1
SELECT nationality ,  age FROM journalist	news_report
SELECT decor ,  COUNT(*) FROM rooms WHERE bedtype = "King" GROUP BY decor;	inn_1
SELECT decor , AVG(baseprice) ,  MIN(baseprice) FROM rooms GROUP BY decor;	inn_1
SELECT COUNT(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)	inn_1
SELECT COUNT(*) FROM reservations as t1 JOIN rooms as t2 ON t1.room  =  t2.roomId WHERE t2.maxoccupancy  =  t1.adults + t1.kids;	inn_1
SELECT t2.roomname FROM reservations as t1 JOIN rooms as t2 ON t1.room  =  t2.roomId WHERE firstname LIKE '%ROY%'	inn_1
SELECT roomname FROM rooms WHERE bedtype  =  "King" OR bedtype  =  "Queen";	inn_1
SELECT roomname FROM rooms ORDER BY maxoccupancy DESC LIMIT 1;	inn_1
SELECT t2.title FROM authorship as t1 JOIN papers as t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT MAX(authorder) FROM authorship)	icfp_1
SELECT COUNT(DISTINCT t1.title) FROM papers as t1 JOIN authorship as t2 ON t1.paperid  =  t2.paperid JOIN inst as t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "University of Pennsylvania"	icfp_1
SELECT DISTINCT t3.name FROM authors as t1 JOIN authorship as t2 ON t1.authid  =  t2.authid JOIN inst as t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  "Katsuhiro" AND t1.lname  =  "Ueno"	icfp_1
SELECT title FROM papers WHERE title LIKE "%ML%"	icfp_1
SELECT DISTINCT t1.fname ,  t1.lname FROM authors as t1 JOIN authorship as t2 ON t1.authid  =  t2.authid JOIN inst as t3 ON t2.instid  =  t3.instid WHERE t3.name  =  "Google"	icfp_1
SELECT COUNT(*) FROM authors as t1 JOIN authorship as t2 ON t1.authid  =  t2.authid JOIN papers as t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  "Atsushi" AND t1.lname  =  "Ohori"	icfp_1
SELECT name ,  num_of_component FROM furniture ORDER BY market_rate LIMIT 1	manufacturer
SELECT COUNT(*) FROM person WHERE age  >  (SELECT MAX(age) FROM person WHERE job  =  'engineer')	network_2
SELECT age FROM person WHERE job  =  'doctor' AND name  =  'Zach'	network_2
SELECT t1.name FROM person as t1 JOIN personFriend as t2 ON t1.name  =  t2.name WHERE t2.friend  =  'Bob'	network_2
SELECT t1.name ,  t1.age ,  t1.job FROM person as t1 JOIN personFriend as t2 ON t1.name  =  t2.name WHERE t2.friend =  'Alice' AND t2.year  =  (SELECT MAX(year) FROM personFriend WHERE friend =  'Alice')	network_2
SELECT name FROM person WHERE job  =  'student' AND age  =  (SELECT MAX(age) FROM person WHERE job  =  'student' )	network_2
SELECT name FROM person EXCEPT SELECT t2.name FROM person as t1 JOIN personFriend as t2 ON t1.name  =  t2.friend WHERE t1.job  =  'student'	network_2
SELECT name FROM personfriend GROUP BY name HAVING COUNT(*)  =  1	network_2
SELECT name FROM person WHERE gender  =  'male' AND age  =  (SELECT MIN(age) FROM person WHERE gender  =  'male' )	network_2
SELECT t1.interaction_type FROM medicine_enzyme_interaction as t1 JOIN medicine as t2 ON t1.medicine_id  =  t2.id JOIN enzyme as t3 ON t1.enzyme_id  =  t3.id WHERE t3.name  =  'ALA synthase' AND t2.name  =  'Aripiprazole'	medicine_enzyme_interaction
SELECT t1.id ,  t1.name ,  t1.fda_approved FROM medicine as t1 JOIN medicine_enzyme_interaction as t2 ON t2.medicine_id  =  t1.id GROUP BY t1.id ORDER BY COUNT(*) DESC	medicine_enzyme_interaction
SELECT t1.id ,  t1.trade_name FROM medicine as t1 JOIN medicine_enzyme_interaction as t2 ON t2.medicine_id  =  t1.id GROUP BY t1.id HAVING COUNT(*)  >=  3	medicine_enzyme_interaction
SELECT name FROM enzyme ORDER BY name DESC	medicine_enzyme_interaction
SELECT apt_number FROM apartments ORDER BY room_count ASC	apartment_rentals
SELECT building_short_name FROM apartment_buildings WHERE building_manager = "Emma"	apartment_rentals
SELECT t2.apt_number ,  t1.booking_start_date ,  t1.booking_start_date FROM apartment_bookings as t1 JOIN apartments as t2 ON t1.apt_id  =  t2.apt_id	apartment_rentals
SELECT t2.guest_first_name ,  t1.booking_start_date ,  t1.booking_start_date FROM apartment_bookings as t1 JOIN guests as t2 ON t1.guest_id  =  t2.guest_id	apartment_rentals
SELECT t2.guest_first_name ,  t2.guest_last_name FROM apartment_bookings as t1 JOIN guests as t2 ON t1.guest_id  =  t2.guest_id WHERE t1.booking_status_code  =  "Confirmed"	apartment_rentals
SELECT booking_status_code ,  COUNT(*) FROM apartment_bookings GROUP BY booking_status_code	apartment_rentals
SELECT t1.building_address FROM apartment_buildings as t1 JOIN apartments as t2 ON t1.building_id  =  t2.building_id WHERE t2.bathroom_count  >  2	apartment_rentals
SELECT t2.guest_first_name ,  t1.booking_start_date ,  t1.booking_start_date FROM apartment_bookings as t1 JOIN guests as t2 ON t1.guest_id  =  t2.guest_id	apartment_rentals
SELECT bname FROM bank WHERE state  =  'New York'	loan_1
SELECT t1.cust_name ,  t1.acc_type FROM customer as t1 JOIN loan as t2 ON t1.cust_id  =  t2.cust_id GROUP BY t1.cust_name HAVING SUM(t2.amount)  >  5000	loan_1
SELECT AVG(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type	loan_1
SELECT t2.bname FROM loan as t1 JOIN bank as t2 ON t1.branch_id  =  t2.branch_id JOIN customer as t3 ON t1.cust_id  =  t3.cust_id WHERE t3.credit_score  <  100	loan_1
SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'	loan_1
SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'	loan_1
SELECT SUM(amount) ,  t1.bname FROM bank as t1 JOIN loan as t2 ON t1.branch_id  =  t2.branch_id GROUP BY t1.bname	loan_1
SELECT COUNT(*) FROM bank	loan_1
SELECT open_date ,  open_year FROM shop WHERE shop_name  =  "Apple"	device
SELECT t2.carrier FROM stock as t1 JOIN device as t2 ON t1.device_id  =  t2.device_id GROUP BY t1.device_id HAVING COUNT(*)  >  1	device
SELECT shop_name ,  location FROM shop ORDER BY shop_name ASC	device
SELECT carrier FROM device ORDER BY carrier ASC	device
SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')	ship_1
SELECT flag FROM ship GROUP BY flag ORDER BY COUNT(*) DESC LIMIT 1	ship_1
SELECT t1.name FROM ship as t1 JOIN captain as t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship as t1 JOIN captain as t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'	ship_1
SELECT COUNT(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank	ship_1
SELECT COUNT(*) FROM program	program_share
SELECT t1.name FROM channel as t1 JOIN broadcast as t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel as t1 JOIN broadcast as t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'	program_share
SELECT origin FROM program ORDER BY origin	program_share
SELECT name FROM channel WHERE owner  =  'CCTV' OR owner  =  'HBS'	program_share
SELECT t2.party FROM election as t1 JOIN representative as t2 ON t1.representative_id  =  t2.representative_id ORDER BY votes asC LIMIT 1	election_representative
SELECT state FROM representative GROUP BY state HAVING COUNT(*)  >=  2	election_representative
SELECT t2.hardware_model_name FROM chip_model as t1 JOIN phone as t2 ON t1.model_name  =  t2.chip_model JOIN screen_mode as t3 ON t2.screen_mode = t3.graphics_mode WHERE t3.type = "Text" OR t1.ram_mib  >  32;	phone_1
SELECT t2.hardware_model_name ,  t2.company_name FROM chip_model as t1 JOIN phone as t2 ON t1.model_name  =  t2.chip_model WHERE t1.launch_year = 2002 OR t1.ram_mib  >  32;	phone_1
SELECT t3.name FROM repair_assignment as t1 JOIN machine as t2 ON t1.machine_id  =  t2.machine_id JOIN technician as t3 ON t1.technician_id  =  t3.technician_id ORDER BY t2.quality_rank	machine_repair
SELECT name FROM technician ORDER BY age ASC	machine_repair
SELECT COUNT(*) FROM technician	machine_repair
SELECT t2.author FROM acceptance as t1 JOIN submission as t2 ON t1.submission_id  =  t2.submission_id GROUP BY t2.author HAVING COUNT(DISTINCT t1.workshop_id)  >  1	workshop_paper
SELECT college FROM submission WHERE scores  >  90 INTERSECT SELECT college FROM submission WHERE scores  <  80	workshop_paper
SELECT author FROM submission WHERE college  =  "Florida" OR college  =  "Temple"	workshop_paper
SELECT t1.cmi_cross_ref_id ,  t1.source_system_code FROM cmi_cross_references as t1 JOIN council_tax as t2 ON t1.cmi_cross_ref_id  =  t2.cmi_cross_ref_id GROUP BY t1.cmi_cross_ref_id HAVING COUNT(*)  >=  1	local_govt_mdm
SELECT product FROM product WHERE max_page_size  =  "A4" AND pages_per_minute_color  <  5	store_product
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1	store_product
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1	store_product
SELECT district_name ,  city_population FROM district WHERE city_population BETWEEN 200000 AND 2000000	store_product
SELECT t2.company ,  COUNT(*) FROM station_company as t1 JOIN company as t2 ON t1.company_id  =  t2.company_id GROUP BY t1.company_id	gas_company
SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING COUNT(*)  >=  2	gas_company
SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion	gas_company
SELECT headquarters ,  COUNT(*) FROM company GROUP BY headquarters	gas_company
SELECT name FROM artwork WHERE artwork_ID NOT IN (SELECT artwork_ID FROM nomination)	entertainment_awards
SELECT festival_name FROM festival_detail WHERE year  =  2007	entertainment_awards
SELECT type FROM institution WHERE founded  >  1990 AND enrollment  >=  1000	protein_institute
SELECT t1.name ,  COUNT(*) FROM building as t1 JOIN institution as t2 ON t1.building_id  =  t2.building_id GROUP BY t1.building_id	protein_institute
SELECT t1.name ,  t1.area ,  t1.population FROM country as t1 JOIN roller_coaster as t2 ON t1.country_id  =  t2.country_id WHERE t2.speed  >  60 INTERSECT SELECT t1.name ,  t1.area ,  t1.population FROM country as t1 JOIN roller_coaster as t2 ON t1.country_id  =  t2.country_id WHERE t2.speed  <  55	roller_coaster
SELECT service_type_code FROM services ORDER BY service_type_code	local_govt_in_alabama
SELECT name ,  built_year FROM mill WHERE type  =  'Grondzeiler'	architecture
SELECT t2.railway_id ,  t1.builder FROM railway as t1 JOIN train as t2 ON t1.railway_id  =  t2.railway_id GROUP BY t2.railway_id ORDER BY COUNT(*) DESC LIMIT 1	railway
SELECT objectnumber FROM railway WHERE railway_id NOT IN (SELECT railway_id FROM train)	railway
SELECT price FROM publication WHERE publisher  =  "Person" OR publisher  =  "Wiley"	book_2
SELECT publisher ,  COUNT(*) FROM publication GROUP BY publisher	book_2
